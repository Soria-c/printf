.\" Manpage for _printf.
.\" Contact 4465@holbertonschool.com to correct errors or typos.
.\"
.TH _printf (3) "13 March 2022" "1.0" "Linux Programmer's Manual"
.SH NAME
.SH ""
.B _printf \- format and print data

.SH SYNOPSIS
.SH ""
_printf function takes two arguments: FIRST a character point to a string called FORMAT,\
and a variable arguments list: arg_list. _printf read the FORMAT string until find a\
conversion specifier, which is indicated with the '%' symbol. If found, f_s() funtion\
match the given conversion specifier with their correct functions.

.SS Compile

.P
.RS
#include "main.h"

$ gcc -Wall -Werror - Wextra -pedantic *.c
.RE

.SS Usage
.RS
#include "main.h"

int printf(const char *FORMAT, ...);
.RE

.SH DESCRIPTION
.SH ""
_printf print ARGUMENT(s) according to FORMAT, or execute according to OPTION.

The format string is composed of zero or more directives: ordinary characters (not %),\
which are copied unchanged to the output stream; and conversion specifications, each\
of which results in fetching zero or more subsequent arguments.  Each conversion\
specification is introduced by the character %, and ends with a conversion specifier.

The overall syntax of a conversion specification is:

%[$][flags][.precision][length modifier]conversion

.SH OPTIONS
.SH ""

.RS
Every format specification starts with a percent sign '%' and ends with a letter. This cases are in _printf.

.IT
.B %
- print a single %

.IT
.B c
- print a character

.IT
.B s
- print a string

.IT
.B d
- print a digit

.IT
.B i
- print an integer

.RE

.P

.SH BUGS
.SH ""
No known bugs.

.SH RETURN
.SH ""
Return number of bytes or -1. 

.SH EXAMPLES
.SH""
To print a NAME (Yohel) and an AGE (31 years old).

#include "main.h"

int age; age = 31;
char *name; name = "Yohel";
\n
_printf ( "I am %s and I am %d years old.\n", name, age );

we obtain: 

I am Yohel and I am 31 years old.

.SH AUTHOR
.SH ""
Carlos Soria (https://github.com/Soria-c) & Yohel Cruz (https://github.com/yohelce)
